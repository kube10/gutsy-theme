<style>
  .calculator-modal {
    position: fixed;
    min-height: 100vh;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    padding: 30%;
    background-color: rgba(28, 28, 28, 0.6);
    padding: 1rem;
    z-index: 999;
    display: flex;
    align-items: center;
    justify-content: center;
    visibility: hidden;
    opacity: 0;
    transition: opacity .3s ease;
  }

  .calculator-modal.open {
    visibility: visible;
    opacity: 1;
  }

  .calculator-modal-inner {
    background-color: white;
    padding: 1rem;
    border-radius: 2rem;
    position: relative;
    top: 100px;
    max-height: calc(100vh - 2rem);
    overflow-y: scroll;
  }

  .calculator-modal.open > .calculator-modal-inner {
    top: 0px;
    transition: top .3s ease .1s;
  }

  .calculator-close {
    position: fixed;
    top: 0;
    right: 0;
    cursor: pointer;
    background-color: rgb(var(--color-base-primary-3));
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    z-index: 999;
  }


  .calculator-modal-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0rem;
    max-width: 760px;
  }

  .calculator-modal-heading {
    margin-bottom: 2rem;
    text-align: center;
  }

  .calculator-form {
    display: flex;
    align-items: left;
    justify-content: space-between;
    flex-direction: column;
    width: 100%;
    margin-bottom: 1rem;
  }

  .calculator-form-group {
    display: flex;
    flex-direction: column;
    margin-bottom: 1rem;
  }

  .warning {
    font-weight: 400;
  }

  .warning a {
    color: rgb(var(--color-base-primary-2))
  }

  .calculator-form-group > .quantity {
    width: 100%;
  }

  .calculator-form-group > label {
    font-weight: 600;
    margin-bottom: .5rem;
  }

  .calculator-modal-results {
    width: 100%;
    margin-bottom: 2rem;
    font-weight: bold;
  }

  .calculator-modal-results span {
    font-weight: normal;
  }

  .calculator-modal-actions {
    margin-bottom: 2rem;
  }

  .calculator-modal-info {
    display: flex;
    align-items: center;
    flex-direction: column;
    text-align: center;
  }

  .calculator-modal-info > svg {
    margin-right: 0rem;
    margin-bottom: 1rem;
    width: 3rem;
    height: 3rem;
  }

  @media (min-width: 1080px) {

    .calculator-modal {
      padding: 2rem;
    }

    .calculator-modal-inner {
      padding: 2rem;
      max-height: auto;
      overflow-y: auto;
    }

    .calculator-form {
      flex-direction: row;
      align-items: center;
    }

    .calculator-modal-content {
      padding: 4rem;
    }

    .calculator-close {
      position: absolute;
      top: 1rem;
      right: 1rem;
      cursor: pointer;
      background-color: transparent;
      width: auto;
      height: auto;
      display: block;
      border-radius: 0;
      z-index: auto;
    }

    .calculator-form-group {
      margin-bottom: 0rem;
    }

    .calculator-form-group > .quantity {
      width: calc(14rem / var(--font-body-scale));
    }

    .calculator-modal-info {
      display: flex;
      align-items: center;
      flex-direction: row;
      text-align: left;
    }

    .calculator-modal-info > svg {
      margin-right: 1rem;
      margin-bottom: 0rem;
      width: auto;
      height: auto;
    }
  }
</style>

<div class="calculator-modal">
  <div class="calculator-modal-inner">
    <div class="calculator-close">
      <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M25.3332 8.54602L23.4532 6.66602L15.9998 14.1193L8.5465 6.66602L6.6665 8.54602L14.1198 15.9993L6.6665 23.4527L8.5465 25.3327L15.9998 17.8793L23.4532 25.3327L25.3332 23.4527L17.8798 15.9993L25.3332 8.54602Z" fill="#1A3C32"/>
      </svg>
    </div>
    <div class="calculator-modal-content">
      <div class="calculator-modal-heading">
        <h2 class="color-primary-2">Gutsy bag calculator</h2>
        <p>Calculate the amount of Gutsy bags you’ll need per month!</p>
      </div>
      <div id="form-{{productTitle}}" class="calculator-form">
        <div class="calculator-form-group">
          <label for="breed">Dog type</label>
          <div class="select">
            <select class="select__select" name="breed" id="breed">
              <option value="puppy">Puppy</option>
              <option value="mini">Mini</option>
              <option value="medium">Medium</option>
              <option value="large">Large</option>
            </select>
            <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-caret" viewBox="0 0 10 6">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" fill="currentColor">
            </path></svg>
          </div>
        </div>
        <div class="calculator-form-group">
          <label for="breed">Weight (kg)</label>
          <div class="select">
            <select id="weight" class="select__select">
            </select>
            <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-caret" viewBox="0 0 10 6">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" fill="currentColor">
            </path></svg>
          </div>
        </div>
        <div class="calculator-form-group age-form-group hidden">
          <label for="breed">Age (months)</label>
          <div class="select">
            <select id="age" class="select__select">
            </select>
            <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-caret" viewBox="0 0 10 6">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" fill="currentColor">
            </path></svg>
          </div>
        </div>
      </div>
      <div class="calculator-modal-results">
        <div class="warning">
        </div>
        <p>Recommended daily dose: <span id="results1"></span></p>
        <p>Kg/month: <span id="results2"></span></p>
      </div>
      <div class="calculator-modal-actions">
        <p style="text-align: center">Click to apply!</p>
        <button id="bagsBtn" class="button button-primary"><span>1&nbsp;</span> Gutsy Bag (6KG)</button>
      </div>
      <div class="calculator-modal-info">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M10.9998 9H12.9998V7H10.9998V9ZM11.9998 20C7.58976 20 3.99976 16.41 3.99976 12C3.99976 7.59 7.58976 4 11.9998 4C16.4098 4 19.9998 7.59 19.9998 12C19.9998 16.41 16.4098 20 11.9998 20ZM11.9998 2C10.6865 2 9.38618 2.25866 8.17292 2.7612C6.95967 3.26375 5.85727 4.00035 4.92869 4.92893C3.05332 6.8043 1.99976 9.34784 1.99976 12C1.99976 14.6522 3.05332 17.1957 4.92869 19.0711C5.85727 19.9997 6.95967 20.7362 8.17292 21.2388C9.38618 21.7413 10.6865 22 11.9998 22C14.6519 22 17.1955 20.9464 19.0708 19.0711C20.9462 17.1957 21.9998 14.6522 21.9998 12C21.9998 10.6868 21.7411 9.38642 21.2386 8.17317C20.736 6.95991 19.9994 5.85752 19.0708 4.92893C18.1422 4.00035 17.0398 3.26375 15.8266 2.7612C14.6133 2.25866 13.313 2 11.9998 2ZM10.9998 17H12.9998V11H10.9998V17Z" fill="#1A3C32"/>
        </svg>
        <i>This calculation is based on recommended doses in accordance with EU regulation N° 767/2009.</i>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
  const puppy = [
    { "weight": 1, "age": 2, "dose": 60, "mpd": 3 },
    { "weight": 1, "age": 3, "dose": 70, "mpd": 3 },
    { "weight": 1, "age": 6, "dose": 65, "mpd": 3 },
    { "weight": 1, "age": 9, "dose": 60, "mpd": 2 },
    { "weight": 1, "age": 12, "dose": "Combinatie niet beschikbaar", "mpd": 2 },
    { "weight": 2, "age": 2, "dose": 60, "mpd": 3 },
    { "weight": 2, "age": 3, "dose": 70, "mpd": 3 },
    { "weight": 2, "age": 6, "dose": 65, "mpd": 3 },
    { "weight": 2, "age": 9, "dose": 60, "mpd": 2 },
    { "weight": 2, "age": 12, "dose": "Combinatie niet beschikbaar", "mpd": 2 },
    { "weight": 5, "age": 2, "dose": 110, "mpd": 3 },
    { "weight": 5, "age": 3, "dose": 120, "mpd": 3 },
    { "weight": 5, "age": 6, "dose": 120, "mpd": 3 },
    { "weight": 5, "age": 9, "dose": 115, "mpd": 2 },
    { "weight": 5, "age": 12, "dose": "Combinatie niet beschikbaar", "mpd": 2 },
    { "weight": 10, "age": 2, "dose": 165, "mpd": 3 },
    { "weight": 10, "age": 3, "dose": 190, "mpd": 3 },
    { "weight": 10, "age": 6, "dose": 200, "mpd": 3 },
    { "weight": 10, "age": 9, "dose": 190, "mpd": 2 },
    { "weight": 10, "age": 12, "dose": 180, "mpd": 2 },
    { "weight": 15, "age": 2, "dose": 215, "mpd": 3 },
    { "weight": 15, "age": 3, "dose": 245, "mpd": 3 },
    { "weight": 15, "age": 6, "dose": 265, "mpd": 3 },
    { "weight": 15, "age": 9, "dose": 250, "mpd": 2 },
    { "weight": 15, "age": 12, "dose": 235, "mpd": 2 },
    { "weight": 20, "age": 2, "dose": 255, "mpd": 3 },
    { "weight": 20, "age": 3, "dose": 295, "mpd": 3 },
    { "weight": 20, "age": 6, "dose": 320, "mpd": 3 },
    { "weight": 20, "age": 9, "dose": 310, "mpd": 2 },
    { "weight": 20, "age": 12, "dose": 285, "mpd": 2 },
    { "weight": 25, "age": 2, "dose": 290, "mpd": 3 },
    { "weight": 25, "age": 3, "dose": 340, "mpd": 3 },
    { "weight": 25, "age": 6, "dose": 370, "mpd": 3 },
    { "weight": 25, "age": 9, "dose": 365, "mpd": 2 },
    { "weight": 25, "age": 12, "dose": 345, "mpd": 2 },
    { "weight": 30, "age": 2, "dose": 325, "mpd": 3 },
    { "weight": 30, "age": 3, "dose": 380, "mpd": 3 },
    { "weight": 30, "age": 6, "dose": 420, "mpd": 3 },
    { "weight": 30, "age": 9, "dose": 415, "mpd": 2 },
    { "weight": 30, "age": 12, "dose": 400, "mpd": 2 },
    { "weight": 40, "age": 2, "dose": 385, "mpd": 3 },
    { "weight": 40, "age": 3, "dose": 455, "mpd": 3 },
    { "weight": 40, "age": 6, "dose": 510, "mpd": 3 },
    { "weight": 40, "age": 9, "dose": 505, "mpd": 2 },
    { "weight": 40, "age": 12, "dose": 480, "mpd": 2 },
    { "weight": 50, "age": 2, "dose": 440, "mpd": 3 },
    { "weight": 50, "age": 3, "dose": 520, "mpd": 3 },
    { "weight": 50, "age": 6, "dose": 590, "mpd": 3 },
    { "weight": 50, "age": 9, "dose": 590, "mpd": 2 },
    { "weight": 50, "age": 12, "dose": 565, "mpd": 2 }
  ]
  const mini = [
    {
      weight: "1-2",
      dose: "29 - 48"
    },
    {
      weight: "2-3",
      dose: "48 - 65"
    },
    {
      weight: "3-4",
      dose: "65 - 81"
    },
    {
      weight: "4-5",
      dose: "81 - 95"
    },
    {
      weight: "5-6",
      dose: "95 - 109"
    },
    {
      weight: "6-8",
      dose: "109 - 136"
    },
    {
      weight: "8-10",
      dose: "136 - 161"
    }
  ]
  const medium = [
    {
      weight: "8-10",
      dose: "136 - 161"
    },
    {
      weight: "10-15",
      dose: "161 - 218"
    },
    {
      weight: "15-20",
      dose: "218 - 270"
    },
    {
      weight: "20-25",
      dose: "270 - 319"
    },
    {
      weight: "25-30",
      dose: "319 - 366"
    },
    {
      weight: "30-40",
      dose: "366 - 454"
    },
    {
      weight: "40-50",
      dose: "454 - 537"
    }
  ]
  const large = [
    {
      weight: "30 - 35",
      dose: "366 - 411"
    },
    {
      weight: "35 - 40",
      dose: "411 - 454"
    },
    {
      weight: "40 - 50",
      dose: "454 - 537"
    },
    {
      weight: "50 - 60",
      dose: "537 - 616"
    },
    {
      weight: "60 - 70",
      dose: "616 - 691"
    },
    {
      weight: "70 - 80",
      dose: "691 - 764"
    },
    {
      weight: "80 - 90",
      dose: "764 - 834"
    }
  ]

const weightField = document.querySelector('#weight');
const breedField = document.querySelector('#breed');
const ageField = document.querySelector('#age');
const result1Field = document.querySelector('#results1');
const result2Field = document.querySelector('#results2');
const bagsBtn = document.querySelector('#bagsBtn');
const bagsBtnSpan = document.querySelector('#bagsBtn > span');

let amount, bagSize;

const init = () => {
  if (document.querySelector('.calculator-form').getAttribute('id').indexOf('puppy') > -1) {
    setResult(puppy[0])
    fillWeightField(puppy)
    fillAgeField();
    document.querySelector('.age-form-group').classList.remove('hidden');
    breedField.value = "puppy";
  } else if (document.querySelector('.calculator-form').getAttribute('id').indexOf('(s)') > -1) {
    fillAgeField();
    breedField.value = "mini";
    setResult(mini[0])
    fillWeightField(mini)
    document.querySelector('.age-form-group').classList.add('hidden');
  } else {
    fillAgeField();
    breedField.value = "medium";
    setResult(medium[0])
    fillWeightField(medium)
    document.querySelector('.age-form-group').classList.add('hidden');
  }
}

init();

bagsBtn.addEventListener('click', function() {
  document.querySelector('.calculator-modal').classList.remove('open');
  const variantSelector = document.querySelector('.variantSelector');
  const quantityInput = document.querySelector('.quantity__input');
  console.log(variantSelector.childNodes[1]);
  variantSelector.childNodes[1].click();
  quantityInput.value = amount;
})

breedField.addEventListener('change', (e) => {
  const value = breedField.value;
  console.log(value);
  if (value === "puppy") {
    fillWeightField(puppy);
    setResult(puppy[0])
    if (document.querySelector('.calculator-form').getAttribute('id').indexOf('puppy') > -1) {
      document.querySelector('.warning').classList.remove('hidden');
    }
    document.querySelector('.age-form-group').classList.remove('hidden');
  }
  else if (value === 'mini') {
    fillWeightField(mini);
    setResult(mini[0])
    document.querySelector('.age-form-group').classList.add('hidden');
  } else if (value === 'medium') {
    fillWeightField(medium);
    setResult(medium[0])
    document.querySelector('.age-form-group').classList.add('hidden');
  } else {
    fillWeightField(large);
    setResult(large[0])
    document.querySelector('.age-form-group').classList.add('hidden');
  }

  setWarning(breedField.value)
})

weightField.addEventListener('change', (e) => {
  const breed = breedField.value;
  const weightValue = weightField.value;
  if (breed === 'puppy') {
    let result;
    puppy.forEach((item, i) => {
      if (item.weight == weightValue) {
        result = item;
      }
    });
    setResult(result)

  } else if (breed === 'mini') {
      let result;
      mini.forEach((item, i) => {
        if (item.weight == weightValue) {
          result = item
        }
      });
      setResult(result)
  } else if (breed === "medium") {
    let result;
    medium.forEach((item, i) => {
      if (item.weight == weightValue) {
        result = item
      }
    });
    setResult(result)
  } else {
    let result;
    large.forEach((item, i) => {
      if (item.weight == weightValue) {
        result = item
      }
    });
    setResult(result)
  }
})

ageField.addEventListener('change', (e) => {
  console.log(ageField.value);
  if (breedField.value === "puppy") {
    let result;
    puppy.forEach((item) => {
      if (ageField.value === item.age.toString() && weightField.value === item.weight.toString()) {
        result = item;
      }
    })
    setResult(result)
  }
})

function setResult(resultItem) {
  if (resultItem.dose === "Combinatie niet beschikbaar") {
    result1Field.innerHTML = resultItem.dose;
  } else {
    if (breedField.value === "puppy") {
      result1Field.innerHTML = resultItem.dose + "g " + "(" + resultItem.mpd + " meals per day)";
    } else {
      result1Field.innerHTML = resultItem.dose + "g";
    }
    calcMonthly(resultItem.dose)
  }
}

function fillAgeField() {
  ageField.innerHTML = "";
  const ages = puppy.map(item => {return item.age});
  const uniq = [... new Set(ages)];
  uniq.forEach((item, i) => {
    ageField.innerHTML += "<option value='"+ item +"'>"+ item +"</option>"
  });
}

function fillWeightField(breed) {
  weightField.innerHTML = "";
  const kgs = breed.map(item => {return item.weight});
  const uniq = [... new Set(kgs)];
  uniq.forEach((item, i) => {
    weightField.innerHTML += "<option value='"+ item +"'>"+ item +"</option>"
  });
}

function calcMonthly(dose) {
  if (breedField.value === "puppy") {
    const monthly = (dose * 30) / 1000;
    result2Field.innerHTML = monthly + "kg";
    calcBags(monthly)
  } else {
    const min = parseInt(dose.substr(0, dose.indexOf('-')));
    const max = parseInt(dose.substr(dose.indexOf('-') + 1));
    const minMonthly = (min * 30) / 1000;
    const maxMonthly = (max * 30) / 1000;
    result2Field.innerHTML = minMonthly + " - " + maxMonthly + "kg";
    calcBags(maxMonthly);
  }
}

function calcBags(monthly) {
  let bags;
  let bagText;
  if (monthly > 6) {
    bagText = "Gutsy bag (6kg)"
    bags = Math.ceil(parseInt(monthly) / 6);
    amount = bags;
    bagSize = "6kg";
  } else {
    bagText = "Gutsy bag (2kg)"
    bags = Math.ceil(parseInt(monthly) / 2);
    amount = bags;
    bagSize = "2kg";
  }
  bagsBtn.innerHTML = bags + "&nbsp;" + bagText;
}

function setWarning(breed) {
  if (document.querySelector('.calculator-form').getAttribute('id').indexOf(breed) == -1) {
    const warnings = [
      {
        tag: "puppy",
        plural: "puppies",
        href: "/products/trekker-fuel-puppy"
      },
      {
        tag: "mini",
        plural: "small adults",
        href: "/products/trekker-fuel-adult-s"
      },
      {
        tag: "medium",
        plural: "medium & large adults",
        href: "/products/trekker-fuel-adult-l"
      },
      {
        tag: "large",
        plural: "medium & large adults",
        href: "/products/trekker-fuel-adult-l"
      }
    ]

    let warning;
    warnings.forEach(item => {
      if (item.tag === breed) {
        warning = item;
      }
    })

    document.querySelector('.warning').innerHTML = `
      <p><strong>Hold on!</strong> This is not the recommended kibble for ${warning.plural}. <br><a class="link" href="${warning.href}">Click here</a> for our ${warning.plural} chicken munchies</p>`
  } else {
    document.querySelector('.warning').innerHTML = "";
  }
}

jQuery("#bagsBtn").click(function() {
  if (bagSize === "6kg") {
    jQuery(".variantSelector").val("6kg");
  } else {
    jQuery(".variantSelector").val("2kg");
  }

  const event = new Event("change", {
    view: window,
    bubbles: true,
    cancelable: true
  });

  document.querySelector(".variantSelector").dispatchEvent(event);
});

</script>
